// @Author: WilliamJiangy
#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
 
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int)(x).size())
#define bug() cout << "######PLEASE_NO_BUG######"
const int nxM = 1e6 + 7;
int prime[nxM];
int n, m;
set<int> listt, vcnt[nxM];
vector<int> cnt(nxM, 0);
void solve() {
	memset(prime, 0, sizeof(prime));
	for(int i = 2; i < sqrt(nxM - 6); i++) {
		if(!prime[i]) {
			for(int j = i * i; j < nxM - 6; j += i) {
				prime[j] = i;
			}
		}
	}
	prime[1] = 1;
	prime[2] = 2;
	for(int i = 3; i < nxM; i += 2) {
		if(!prime[i]) prime[i] = i;
	}
	// for(int i = 0; i < 20; i++) cout << prime[i] << " ";
	cin >> n >> m;
	for(int i = 0; i < m; i++) {
		string s;
		cin >> s;
		int num;
		cin >> num;
		if(s[0] == '+') {
			if(listt.count(num)) {
				cout << "Already on\n";
			}
			else {
				bool ok = true;
				int temp = num;
				if(listt.empty()) listt.insert(num);
				while(temp != 1) {
					// bug();
					// cout << temp << " " << prime[temp] << " " << cnt[prime[temp]] << "\n";
					if(cnt[prime[temp]]) {
						for(int j : vcnt[prime[temp]]) {
							if(j != num) {
								cout << "Conflict with " << j << "\n";
								break;
							}
						}
						ok = false;
						break;
					}
					if(!ok) break;
					else {
						temp /= prime[temp];
					}
				}
				if(ok) {
					cout << "Success\n";
					listt.insert(num);
					temp = num;
					while(temp != 1) {
						cnt[prime[temp]]++;
						vcnt[prime[temp]].insert(num);
						temp /= prime[temp];
					}
				}
			}
		}
		// bug();
		else if(s[0] == '-') {
			if(listt.count(num)) {
				cout << "Success\n";
				int temp = num;
				while(temp != 1) {
					cnt[prime[temp]]--;
					vcnt[prime[temp]].erase(num);
					temp /= prime[temp];
				}
				listt.erase(num);
			}
			else {
				cout << "Already off\n";
			}
		}
	}	
}
 
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	#ifndef ONLINE_JUDGE
	freopen("kext.inp", "r", stdin);
	#endif
	solve();
	return 0;
}
