// @Author: WilliamJiangy
#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using ull = unsigned long long;
 
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int)(x).size())
#define array ar
 
long long dx[] = {-1, 0, 1, 0};
long long dy[] = {0, -1, 0, 1};
 
void solve() {
	long long n, m, k;
	cin >> n >> m >> k;
	char a[100][100];
	for(long long i = 0; i < n; i++) {
		for(long long j = 0; j < m; j++) {
			cin >> a[i][j];
		}
	}
	long long dist[100][100];
	bool visited[100][100];
	memset(dist, 0, sizeof(dist));
	memset(visited, false, sizeof(visited));
	function<long long(long long, long long)> dfs = [&](long long i, long long j) {
		if(visited[i][j]) return (ll) (0);
		visited[i][j] = true;
		if(!i || !j || i == n - 1 || j == m - 1) dist[i][j] = (ll) ((1e9) + 7);
		else dist[i][j] = (ll) (1);
		for(long long t = 0; t < 4; t++) {
			long long x = dx[t] + i;
			long long y = dy[t] + j;
			if(i >= 0 && j >= 0 && i < n && j < m && !visited[x][y] && a[x][y] == '.') {
				dfs(x, y);
				dist[i][j] += dist[x][y];
			}
		}
		return (ll) (dist[i][j]);
	};
	function<void(long long , long long)> rebuild = [&](long long i, long long j) {
		a[i][j] = '*';
		for(long long t = 0; t < 4; t++) {
			long long x = dx[t] + i;
			long long y = dy[t] + j;
			if(x >= 0 && y >= 0 && x < n && y < m && a[x][y] == '.') {
				rebuild(x, y);
			}
		}
	};
	long long new_dist[100][100];
	memset(new_dist, 0, sizeof(new_dist));
	vector<long long> res;
	for(long long i = 0; i < n; i++) {
		for(long long j = 0; j < m; j++) {
			if(!visited[i][j] && a[i][j] == '.') {
				long long d = dfs(i, j);
				if(d < 1e9 + 7) {
					res.push_back(d);
					new_dist[i][j] = d;
				}
			}
		}
	}
	sort(all(res));
	multiset<long long> ms;
	long long ans = 0;
	for(long long i = 0; i < sz(res) - k; i++) {
		ans += res[i];
		ms.insert(res[i]);
	}
	cout << ans << "\n";
	for(long long i = 0; i < n; i++) {
		for(long long j = 0; j < m; j++) {
			if(a[i][j] == '.' && ms.count(new_dist[i][j])) {
				rebuild(i, j);
				ms.erase(ms.find(new_dist[i][j]));
			}
		}
	}
	for(long long i = 0; i < n; i++) {
		for(long long j = 0; j < m; j++) {
			cout << a[i][j];
		}
		cout << "\n";
	}
}
 
int main() {
	ios_base::sync_with_stdio(false);
	cin.tie(nullptr);
	#ifndef ONLINE_JUDGE
	freopen("kext.inp", "r", stdin);
	#endif
	solve();
	return 0;
}
